Александр, добрый день.
Спасибо большое за интервью и ваш интерес к нашей вакансии.
Как вы обсуждали с коллегами, у нас есть тестовое задание, которое мы предлагаем вам сделать. Если у вас появятся какие-либо вопросы, то их можно задавать ответным письмом, сохранив изначальный состав участников.
У нас нет дэдлайнов и мы предлагаем вам самостоятельно оценить необходимое время на выполнение и сообщить нам.

Задание:

Напишите react компонент для сокращения однострочного текста. Максимальная ширина текста ограничена шириной контейнера. Не поместившийся текст сокращается до многоточия (…), но последние N символов должны выводиться всегда. Например, текст feature/create-new-text-ellipsis-component-TC2018.02 при узкой ширине контейнера и N=5 может сократится до feature/create…18.02.

Компонент должен поддерживать следующие свойства:

- children (обязательный) - текст;

- tailLength (обязательный) - длина не сокращающегося текста справа;

- title (необязательный) - текст подсказки по наведению;

- className (необязательный) - css класс контейнера компонента.

Компонент должен быть высокопроизводительным, чаще всего он будет использоваться в столбцах таблиц с большим количеством данных. При изменении ширины таблицы, которая содержит 2000 строк по две колонки с сокращающимся текстом в каждой, перерисовка должна занимать не более 500 миллисекунд.

Поддерживаться должны все основные браузеры, включая Microsoft Edge и IE 11.

Решение мы ожидаем production-качества, а что вкладывать в это понятие - на ваше усмотрение.



Предварительная такая оценка:

- Развернуть проект с тестовой страницей, где будут вставлены экземпляры заглушки разрабатываемого компонента (аналог компонента, но с упрощенным обрезанием текста)
с разными наборами значений props-параметров и окружением (ширины родительских элементов, меняющиеся при resize окна и т.д.), включая таблицу, чтобы сразу понимать
запас по производительности - 8x (из-за объема)

- Разработка самого компонента, пока планирую использовать деление текста на две части - блок с обязательным текстом слева и блок, который занимает оставшееся справа   пространство с обрезанием при помощи css, если с версткой все сложится плохо, закладываю риск на изобретение алгоритма на js, который будет мерить ширину текста и обрезать вручную. Здесь - кроссбраузерное и нагрузочное тестирование и отладка. 5x - 21x (из-за сложности и риска)

Пока примем, что на 1x уйдет 1 час, выполнение займет 2d - 3d4h, учитывая, что есть текущая работа - надеюсь неделя - две, на большее не хочется растягивать :)

Вопросы пока в голове такие:

Нужна ли в рамках этого задания проверить поддержку RightToLeft - языков? НЕТ

Все основные браузеры включают мобильные? - На моё усмотрение.

Нужно ли ориентироваться на совсем небольшие размеры родительского контейнера, когда от начала текста не умещается первая буква или, даже не помещается обязательный  текст справа?
<ДА, тут я бы обрезал сам хвост, иначе можно подумать, что отображается необрезанный текст, хотя там на смом деле огого>

Текст может включать inline-разметку?
- Нет

12 - 19
7 часов
5 часов

21:45
22:30
Градиенты требуют задавать цвет текста или цвет фона

10:15
На тестировочной странице нужна перерисовка! ЖЦ компонента, замер отдельно перерисовки
Еще нужна проверка разных влияний стиля - падинги, марджины, шрифт и т.д.
10:45

11-12
Нарисовал бокс-модель задачки.

14:30-15:15
Оценил время на отрисовку в простом варианте scrollWidth>clientWidth. Нужно проверить время перерисовки - оно может быть меньше
20:30 - 21 Почитал реакт
21:30 Добавляю перерисовку таблицы для теста

Изменение размера - отдельная тема пока.
13:00-14:00 Рабочее решение. - 18:00

Замеры не возможны без перерисовки? По опытам - да.

11:00 Сделать решение, которое работает и при монтировании и при изменении.
14:00 - решение сделано, использованы хуки. Осталось только понять, нужно ли его оптимизировать, что с кроссбраузерностью и долизать крайние случаи.
Можно мерить время в ходе анимации и если браузер успевает - домеривать размеры.

15:45 Голый JS
Сделал домеривание в анимации - не помогает
17:15

20:45
Читал JS
Попробую разобраться в работе на небольшом колве строк и можно переходить к канвасу?
Переходим к канвасу!
22:12

11:00
Канвас - не стоит переживать за dpi
15:13 - работает алгоритм измерения канвасом
17:30 - два варианта алгоритма, исправил стили в ИЕ, отступы в Мозиле и ИЕ
23:30

11-12 Демку подправил